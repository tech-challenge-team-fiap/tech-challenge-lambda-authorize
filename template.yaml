AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Exemplo de configuração do AWS SAM para Cognito, Lambda e API Gateway.

Globals:
  Function:
    Timeout: 20
    MemorySize: 512

Resources:
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyUserPool
      Schema:
        - Name: "cpf"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          StringAttributeConstraints:
            MinLength: "11"
            MaxLength: "11"

  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyUserPoolClient
      UserPoolId: !Ref MyCognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - "ALLOW_USER_SRP_AUTH"
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_USER_PASSWORD_AUTH"
        - "ALLOW_ADMIN_USER_PASSWORD_AUTH"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: "LambdaExecutionPolicyCognito"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cognito-idp:*'
                Resource: '*'

  LambdaAuthorizedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LambdaAuthorizedFunction/
      Handler: auth.App::handleRequest # Ensure this path is correct for your application
      Runtime: java11
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          USER_POOL_ID: !Ref MyCognitoUserPool
          APP_CLIENT_ID: !Ref MyCognitoUserPoolClient
          REGION: !Ref AWS::Region
      Events:
        Authentication:
          Type: Api
          Properties:
            Path: /auth
            Method: post

Outputs:
  AuthenticationApi:
    Description: API Gateway endpoint URL for Prod stage for Authentication function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/"
  LambdaAuthorizedFunctionArn:
    Description: Authentication Lambda Function ARN
    Value: !GetAtt LambdaAuthorizedFunction.Arn
  UserPoolId:
    Description: "The ID of the Cognito User Pool"
    Value: !Ref MyCognitoUserPool
  UserPoolClientId:
    Description: "The ID of the Cognito User Pool Client"
    Value: !GetAtt MyCognitoUserPoolClient.ClientId
