AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Exemplo de configuração do AWS SAM para Cognito, Lambda e API Gateway.

Globals:
  Function:
    Timeout: 20
    MemorySize: 128

Resources:
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyUserPool
      Schema:
        - Name: cpf
          AttributeDataType: String
          Mutable: false
          Required: false
          StringAttributeConstraints:
            MinLength: "11"
            MaxLength: "11"

  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyUserPoolClient
      UserPoolId: !Ref MyCognitoUserPool
      GenerateSecret: false

  LambdaAuthorizedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LambdaAuthorizedFunction/
      Handler: auth.App::handleRequest # Assegure-se de que este caminho esteja correto para sua aplicação
      Runtime: java11
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: MyCognitoUserPool
          APP_CLIENT_ID:
            Ref: MyCognitoUserPoolClient
          REGION:
            Ref: AWS::Region
      Events:
        Authentication:
          Type: Api
          Properties:
            Path: /auth
            Method: post

Outputs:
  AuthenticationApi:
    Description: API Gateway endpoint URL for Prod stage for Authentication function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/"
  LambdaAuthorizedFunctionArn:
    Description: Authentication Lambda Function ARN
    Value: !GetAtt LambdaAuthorizedFunction.Arn
  UserPoolId:
    Description: "The ID of the Cognito User Pool"
    Value: !Ref MyCognitoUserPool
  UserPoolClientId:
    Description: "The ID of the Cognito User Pool Client"
    Value: !GetAtt MyCognitoUserPoolClient.ClientId
